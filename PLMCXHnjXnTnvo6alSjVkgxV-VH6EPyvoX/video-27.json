{
  "kind": "youtube#videoListResponse",
  "etag": "q41GAFpIDm5HS-h_vQBr7FfGeYM",
  "items": [
    {
      "kind": "youtube#video",
      "etag": "RcDkLeIr1i3O5uymMgr_mfmwrHI",
      "id": "CtmBGH8MkX4",
      "snippet": {
        "publishedAt": "2018-06-09T11:16:36Z",
        "channelId": "UCRPMAqdtSgd0Ipeef7iFsKw",
        "title": "5 Tips for System Design Interviews",
        "description": "Here are 5 Tips for System Design interviews. They are helpful when preparing for a System Design interview.\n\n1. Don't get into details prematurely\n\n2. Avoid fitting requirements to a set architecture in mind\n\n3. Keep it simple, stupid! Remember to look at the big picture and avoid too many hacks when solving.\n\n4. Have justifications for the points you make. Don't use buzz words or half hearted thoughts in your design.\n\n5. Be aware of the current solutions and tech practices. A lot of solutions can be purchased off the shelf which simplify implementation. You should be able to argue for a custom implementation with it's pros and cons.\n\nHave these on the back of your mind during you interview, and all the best!\nHere are three major points evaluated during the interview:\n1. Clarity of Thought\n\na. Express your thoughts in a clear manner.\n\nb. Justify your decisions. Critical reasoning and argument are key to a successful software design.\n\nc. When faced with a problem, use standard approaches to mitigate it. For example, say you are faced with an availability problem. State that replication and partitioning help increase availability in general, and move on to offer a solution.\n\nd. Don\u2019t make points without thinking them through. Half-hearted attempts at solving problems are frowned upon heavily.\n\n2. Know about existing solutions\n\na. Stay up to date with the current solutions in the market. This includes products and design practices. If NoSQL is being adopted left right and center, you need to be aware of it.\n\nb. Know when to pick a solution vs. building something custom. If you name a product, you should be (generally) aware of the features it provides. \n\nc. Design practices enable you to meet custom requirements. Examples are decoupling systems, load balancing, sticky sessions, etc\u2026\n\n3. Flexibility\n\na. Switch your targets as the requirements shift. If the interviewer wants to know about one particular part of the system, do it first.\n\nb. Never have a set architecture in mind. We all try to fit requirements to a system, but only after it has been shaped by the initial ones. A rigid attitude creates a brittle architecture. It will break before you do.\n\nc. Take a step back at times to make adjustments to the general architecture. Being focused on one part can narrow our vision and bloat those areas. There will be components which can be extracted out and extended to the rest of the system.\n\nCheers!\n\nQuora answer:\nhttp://qr.ae/TUphXJ\n\nRelevant Links:\nhttps://github.com/checkcheckzz/system-design-interview\nhttps://www.palantir.com/how-to-ace-a-systems-design-interview/\n\nSystem Design Video Course: \nhttps://get.interviewready.io/courses/system-design-interview-prep\n\nAlong with video lectures, this course has architecture diagrams, capacity planning, API contracts and evaluation tests. It's a complete package.\n\nUse the coupon code 'earlybird' for a 20% discount.\n\nMy book recommendation: \nDesigning Data Intensive Applications - https://amzn.to/2yQIrxH",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/CtmBGH8MkX4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/CtmBGH8MkX4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/CtmBGH8MkX4/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/CtmBGH8MkX4/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/CtmBGH8MkX4/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Gaurav Sen",
        "tags": [
          "dos and don'ts for interview",
          "system design interview",
          "system design tips",
          "tips for interview",
          "tips for software interview",
          "software interview",
          "tips and tricks for interview",
          "dos and don'ts",
          "system design",
          "software architecture interview",
          "tips and tricks software interview",
          "gkcs",
          "gaurav sen"
        ],
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "5 Tips for System Design Interviews",
          "description": "Here are 5 Tips for System Design interviews. They are helpful when preparing for a System Design interview.\n\n1. Don't get into details prematurely\n\n2. Avoid fitting requirements to a set architecture in mind\n\n3. Keep it simple, stupid! Remember to look at the big picture and avoid too many hacks when solving.\n\n4. Have justifications for the points you make. Don't use buzz words or half hearted thoughts in your design.\n\n5. Be aware of the current solutions and tech practices. A lot of solutions can be purchased off the shelf which simplify implementation. You should be able to argue for a custom implementation with it's pros and cons.\n\nHave these on the back of your mind during you interview, and all the best!\nHere are three major points evaluated during the interview:\n1. Clarity of Thought\n\na. Express your thoughts in a clear manner.\n\nb. Justify your decisions. Critical reasoning and argument are key to a successful software design.\n\nc. When faced with a problem, use standard approaches to mitigate it. For example, say you are faced with an availability problem. State that replication and partitioning help increase availability in general, and move on to offer a solution.\n\nd. Don\u2019t make points without thinking them through. Half-hearted attempts at solving problems are frowned upon heavily.\n\n2. Know about existing solutions\n\na. Stay up to date with the current solutions in the market. This includes products and design practices. If NoSQL is being adopted left right and center, you need to be aware of it.\n\nb. Know when to pick a solution vs. building something custom. If you name a product, you should be (generally) aware of the features it provides. \n\nc. Design practices enable you to meet custom requirements. Examples are decoupling systems, load balancing, sticky sessions, etc\u2026\n\n3. Flexibility\n\na. Switch your targets as the requirements shift. If the interviewer wants to know about one particular part of the system, do it first.\n\nb. Never have a set architecture in mind. We all try to fit requirements to a system, but only after it has been shaped by the initial ones. A rigid attitude creates a brittle architecture. It will break before you do.\n\nc. Take a step back at times to make adjustments to the general architecture. Being focused on one part can narrow our vision and bloat those areas. There will be components which can be extracted out and extended to the rest of the system.\n\nCheers!\n\nQuora answer:\nhttp://qr.ae/TUphXJ\n\nRelevant Links:\nhttps://github.com/checkcheckzz/system-design-interview\nhttps://www.palantir.com/how-to-ace-a-systems-design-interview/\n\nSystem Design Video Course: \nhttps://get.interviewready.io/courses/system-design-interview-prep\n\nAlong with video lectures, this course has architecture diagrams, capacity planning, API contracts and evaluation tests. It's a complete package.\n\nUse the coupon code 'earlybird' for a 20% discount.\n\nMy book recommendation: \nDesigning Data Intensive Applications - https://amzn.to/2yQIrxH"
        },
        "defaultAudioLanguage": "en"
      },
      "contentDetails": {
        "duration": "PT8M19S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      }
    }
  ],
  "pageInfo": {
    "totalResults": 1,
    "resultsPerPage": 1
  }
}